// <auto-generated />
using System;
using AdminLte3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdminLte3.Migrations
{
    [DbContext(typeof(TodosContext))]
    [Migration("20201111071938_initial1")]
    partial class initial1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdminLte3.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstMidName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("TeamID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("AdminLte3.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ManagerEmployeeID")
                        .HasColumnType("int");

                    b.HasKey("TeamID");

                    b.HasIndex("ManagerEmployeeID");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("AdminLte3.Models.Todo", b =>
                {
                    b.Property<int>("TodoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasMaxLength(100);

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasExplanation")
                        .HasColumnType("bit");

                    b.Property<bool>("HasReminder")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUrgent")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReminderTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<bool>("Teamwork")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TodoStatus")
                        .HasColumnType("int");

                    b.Property<int?>("TodoType")
                        .HasColumnType("int");

                    b.HasKey("TodoID");

                    b.HasIndex("TeamID");

                    b.ToTable("Todo");
                });

            modelBuilder.Entity("AdminLte3.Models.TodoEmployee", b =>
                {
                    b.Property<int>("TodoID")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("TodoID", "EmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("TodoEmployee");
                });

            modelBuilder.Entity("AdminLte3.Models.Employee", b =>
                {
                    b.HasOne("AdminLte3.Models.Team", null)
                        .WithMany("Employees")
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("AdminLte3.Models.Team", b =>
                {
                    b.HasOne("AdminLte3.Models.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerEmployeeID");
                });

            modelBuilder.Entity("AdminLte3.Models.Todo", b =>
                {
                    b.HasOne("AdminLte3.Models.Team", null)
                        .WithMany("Todos")
                        .HasForeignKey("TeamID");
                });

            modelBuilder.Entity("AdminLte3.Models.TodoEmployee", b =>
                {
                    b.HasOne("AdminLte3.Models.Employee", "Employee")
                        .WithMany("Todos")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdminLte3.Models.Todo", "Todo")
                        .WithMany("Teammates")
                        .HasForeignKey("TodoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
